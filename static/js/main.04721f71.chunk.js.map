{"version":3,"sources":["components/Form/index.js","components/Grid/index.js","pages/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","style","float","marginBottom","paddingLeft","paddingRight","TextArea","rows","FormBtn","children","Container","fluid","Row","Col","size","split","map","join","Home","useState","formObject","setFormObject","handleInputChange","event","target","name","value","onChange","placeholder","disabled","title","onClick","preventDefault","console","log","service","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEO,SAASA,EAAMC,GACpB,OACE,qBAAKC,UAAU,aAAf,SACE,+CAAOA,UAAU,gBAAmBD,GAApC,IAA2CE,MAAO,CAAEC,MAAO,SAAUC,aAAc,GAAIC,YAAa,GAAIC,aAAc,SAKrH,SAASC,EAASP,GACvB,OACE,qBAAKC,UAAU,aAAf,SACE,sCAAUA,UAAU,eAAeO,KAAK,MAASR,MAKhD,SAASS,EAAQT,GACtB,OACE,kDAAYA,GAAZ,IAAmBE,MAAO,CAAEE,aAAc,IAAMH,UAAU,kBAA1D,SACGD,EAAMU,YChBN,SAASC,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOF,EAAY,EAAZA,SACjC,OAAO,qBAAKT,UAAS,mBAAcW,EAAQ,SAAW,IAA/C,SAAsDF,IAIxD,SAASG,EAAT,GAAmC,IAApBD,EAAmB,EAAnBA,MAAOF,EAAY,EAAZA,SAC3B,OAAO,qBAAKT,UAAS,aAAQW,EAAQ,SAAW,IAAzC,SAAgDF,IAKlD,SAASI,EAAT,GAAkC,IAAnBC,EAAkB,EAAlBA,KAAML,EAAY,EAAZA,SAC1B,OACE,qBACET,UAAWc,EACRC,MAAM,KACNC,KAAI,SAAAF,GAAI,MAAI,OAASA,KACrBG,KAAK,KAJV,SAMGR,ICiCQS,MApDf,WAAiB,IAAD,EACwBC,mBAAS,IADjC,mBACLC,EADK,KACOC,EADP,KAGZ,SAASC,EAAkBC,GAAQ,IAAD,EACNA,EAAMC,OAAtBC,EADsB,EACtBA,KAAMC,EADgB,EAChBA,MACdL,EAAc,2BAAKD,GAAN,kBAAmBK,EAAOC,KAU3C,OACI,eAAChB,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACC,EAAD,UACI,cAACC,EAAD,CAAKC,KAAK,cAAV,SACI,gDAIR,eAACF,EAAD,WACA,cAACC,EAAD,CAAKC,KAAK,aAAV,SACQ,6DAEJ,cAACD,EAAD,CAAKC,KAAK,aAAV,SACI,iCACI,cAAChB,EAAD,CACI6B,SAAUL,EACVG,KAAK,QACLG,YAAY,qBAEhB,cAACtB,EAAD,CACIqB,SAAUL,EACVG,KAAK,UACLG,YAAY,YAEhB,cAACpB,EAAD,CACIqB,UAAYT,EAAWU,MACvBC,QAjCxB,SAA0BR,GACtBA,EAAMS,iBACFZ,EAAWU,OACXG,QAAQC,IAAI,uBAAyBd,EAAWU,MAAQ,IAAMV,EAAWe,UA4B7D,gCCnCTC,MANf,WACE,OACI,cAAC,EAAD,KCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.04721f71.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} style={{ float: \"center\", marginBottom: 10, paddingLeft: 15, paddingRight: 15 }} />\n    </div>\n  );\n}\n// float: \"left\", \nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}","import React from 'react';\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Input, TextArea, FormBtn } from \"../components/Form\"\nimport { Col, Row, Container } from \"../components/Grid\"\n// import Brand from \"../components/Brand\" \n\nfunction Home() {\n    const [formObject, setFormObject] = useState({})\n\n    function handleInputChange(event) {\n        const { name, value } = event.target;\n        setFormObject({ ...formObject, [name]: value })\n    };\n\n    function handleFormSubmit(event) {\n        event.preventDefault();\n        if (formObject.title) {\n            console.log(\"Your submission was \" + formObject.title + \" \" + formObject.service)\n         }       \n    };\n\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-12 sm-12\">\n                    <h1>Cut N Edge</h1>\n                {/* <Brand /> */}\n                </Col>\n            </Row>\n            <Row>\n            <Col size=\"md-4 sm-12\">\n                    <h3>How can I help you today?</h3>\n                </Col>\n                <Col size=\"md-8 sm-12\">\n                    <form>\n                        <Input\n                            onChange={handleInputChange}\n                            name=\"title\"\n                            placeholder=\"Title (required)\"\n                        />\n                        <TextArea\n                            onChange={handleInputChange}\n                            name=\"service\"\n                            placeholder=\"Service\"\n                        />\n                        <FormBtn\n                            disabled={!(formObject.title)}\n                            onClick={handleFormSubmit}\n                        >\n                            Submit\n        </FormBtn>\n                    </form>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Home;","import './App.css';\nimport Home from './pages/Home'\n\nfunction App() {\n  return (\n      <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}